spring:
  application:
    name: security-demo

  mvc:
    static-path-pattern: /**

  resources:
    static-locations: classpath:/resources/

  redis:
    host: ${REDIS_HOST:49.232.11.36}
    port: ${REDIS_PORT:800}
    password: ${REDIS_PASSWORD:123456}

  datasource:
    url: jdbc:mysql://${MASTER_MYSQL_HOST:localhost}:${MASTER_MYSQL_PORT:3306}/hypermarket?useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: ${MASTER_MYSQL_USERNAME:root}
    password: ${MASTER_MYSQL_PASSWORD:199701}
    sql-script-encoding: utf-8
    # 使用druid数据源
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    initialize: ${DB_AUTO_INIT:false}
    name: security
    druid:
      # 配置初始化大小、最小、最大
      initialSize: 4
      minIdle: 4
      maxActive: 201
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      testWhileIdle: true
      # 这里建议配置为TRUE，防止取到的连接不可用
      testOnBorrow: true
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
      # 默认提交方式。默认true
      defaultAutoCommit: true
      # 验证连接有效与否的SQL，不同的数据配置不同
      validationQuery: select 2 # 无效
      filters: stat,wall,log4j

  session:
    store-type: none

server:
  port: 10010

  session:
    timeout: 600


imooc:
  security:
    social:
      qq:
        app-id:

        app-secret:

        providerId: callback.do
      weixin:
        app-id: wxd99431bbff8305a0

        app-secret: 60f78681d063590a469f1b297feff3c4

      filterProcessesUrl: /qqLogin

    browser:
      signUpUrl: /demo-signUp.html

